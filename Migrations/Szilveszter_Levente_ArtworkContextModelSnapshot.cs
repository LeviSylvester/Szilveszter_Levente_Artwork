// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Szilveszter_Levente_Artwork.Data;

#nullable disable

namespace Szilveszter_Levente_Artwork.Migrations
{
    [DbContext(typeof(Szilveszter_Levente_ArtworkContext))]
    partial class Szilveszter_Levente_ArtworkContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Artwork", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VenueID");

                    b.ToTable("Artwork");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.ArtworkCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("ArtworkID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ArtworkID");

                    b.HasIndex("CategoryID");

                    b.ToTable("ArtworkCategory");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Venue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Venue");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Artwork", b =>
                {
                    b.HasOne("Szilveszter_Levente_Artwork.Models.Venue", "Venue")
                        .WithMany("Artworks")
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.ArtworkCategory", b =>
                {
                    b.HasOne("Szilveszter_Levente_Artwork.Models.Artwork", "Artwork")
                        .WithMany("ArtworkCategories")
                        .HasForeignKey("ArtworkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Szilveszter_Levente_Artwork.Models.Category", "Category")
                        .WithMany("ArtworkCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artwork");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Artwork", b =>
                {
                    b.Navigation("ArtworkCategories");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Category", b =>
                {
                    b.Navigation("ArtworkCategories");
                });

            modelBuilder.Entity("Szilveszter_Levente_Artwork.Models.Venue", b =>
                {
                    b.Navigation("Artworks");
                });
#pragma warning restore 612, 618
        }
    }
}
